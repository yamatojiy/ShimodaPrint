*■***********************************************************
*■*** 日報を簡易的に入力するためのフォームを試験的につくってます。
*■***　作業を因数分解して極力入力箇所を減らしましょう。
*■***
*■***
*■***********************************************************

/*▼汎用変数 */
var 数値  { &CHK }
var 文字列{ &cosTypeS = ""  }　/*←モーダルフォームの社員絞り込み用変数 */

/*▼共通日報変数 */
var 数値  { &outPutNum = 0 , &作業tbxId } /*←日報に戻す際のコード */
var 日時  { &IN日付N　}
var 数値  { &IN係N　, &INCDN , &伝票ナンバーN , &INミスN , &IN内容コードN , &IN時間N　, &IN部数N }
var 文字列{ &IN担当者N , &IN備考N , &IN内容記載N , &IN得意先N , &IN品名N , &INサイズN , &INページ数N　}

/*▼印刷日報用変数 */
var 数値  { &IN印刷サイズN , &IN版数N , &IN台数N , &IN表N　, &IN裏N , &IN実数N , &IN予備数N　}
var 数値  { &IN用紙数N , &IN通し枚数N ,&IN積算枚数N }

/*▼仕上日報用変数 */
var 数値  { &SI材料 , &SIサイズ , &SI折りコマ , &SI枚数 , &SICNT , &SIコマ数 }

/*▼用紙情報変数 */
var 数値  { &mCD = 0 }
var 文字列{ &銘柄MS , &サブ銘柄MS , &YTMS , &サイズ名MS }
var 数値  { &重さMS , &サイズMS　, &NumMS , &用紙IDMS }

/*▼印刷を用紙に入力しない */
var 数値 { &用紙入力ONOFF = 0 }

*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　ファイルアドレス

/*▼ファイルアドレス */
var 文字列{ &dataPath = #データパス名 }
var 文字列{ &シモダ社員tbx = &dataPath + "..\..\system\tbx\03_01_シモダ社員情報.tbx" }
var 文字列{ &作業コードtbx = &dataPath + "tbx\10_作業コードリスト.tbx" }
var 文字列{ &用紙IDTbx  = &dataPath + "..\..\用紙管理\01_用紙ID\用紙ID.tbx" }

/*▼一括処理 */
var 文字列{ &日報登録cmx = &dataPath + "cmx\N2-日報登録.cmx" }

/*▼ファイルの外パス */
var 文字列{ &subMastaTbx = &dataPath + "..\..\submaster.tbx"  }

/*▼画像データパス */
var 文字列{ &icon1Png = &dataPath + "png\1.png" }
var 文字列{ &icon2Png = &dataPath + "png\2.png" }
var 文字列{ &icon3Png = &dataPath + "png\3.png" }
var 文字列{ &icon4Png = &dataPath + "png\4.png" }

*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　モーダルフォーム
var 数値  { &Num }
var 文字列{ &Str }
var 日時  { &Day }

/*▼断裁情報絞り込み */
var 文字列{ &用紙断裁modal = &dataPath + "..\..\用紙管理\04_資材断裁\modal\断裁後情報選択.wfx" }

/*▼フォーム立ち上げ */
var 文字列{ &用紙検索wfx = &dataPath + "..\..\用紙管理\01_用紙ID\用紙ID索引フォーム.wfx" }

/*▼カレンダーと電卓のパス　*/
var 文字列{ &カレンダーmodal    = &dataPath    + "..\..\system\modal\calendar\INF_DatePicker.wfx"}
var 文字列{ &電卓modal        = &dataPath   + "..\..\system\modal\calculator\INF_電卓.wfx"}
var 文字列{ &社員リストmodal    = &dataPath   + "..\..\system\modal\General\03_01_社員情報【S】.wfx"}

/*▼ライブラリ */
var 文字列{ &Lib日報時 = ＋"..\..\system\Lib\Lib_ライブラリ桐処理.cmx" }
ライブラリ &Lib日報時

var 数値  { &OPnum = 0  , &openF = 0 }
var 文字列 { &mode = "共有更新" }
var 文字列 { &mode参照 = "共有参照" }
*■*----------------------------------------------------------
*■*----- メイン処理
*■*----------------------------------------------------------
名札 MAIN


*
*■*----------------------------------------------------------
*■*-----　手続き処理
*■*----------------------------------------------------------
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　フォーム開始の処理
手続き定義開始　フォーム::フォーム開始(長整数　&表番号)

        &cosTypeS = #表題
        &IN日付N = #日時値


        ケース開始
        ケース（　&cosTypeS = "印刷"　）
            手続き実行 印刷用属性情報代入（）

        ケース（　&cosTypeS = "製品"　）
            手続き実行 仕上用属性情報代入（）

        ケース（　&cosTypeS = "製版"　）
            手続き実行 製版用属性情報代入（）

        ケース（　&cosTypeS = "組版"　）
            手続き実行 組版用属性情報代入（）

        ケース終了

        メソッド呼び出し @フォーム.変数変更()

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　印刷用属性情報代入
    手続き定義開始 印刷用属性情報代入（）
        &作業tbxId　= #IS表
        &outPutNum = 1
        &実行リターン = 12
        &mCD = #行番号
        &IN係N = 6
    手続き定義終了
    手続き定義開始 仕上用属性情報代入（）
        &作業tbxId　= #IS表
        &outPutNum = 2
        &IN係N = 7
    手続き定義終了
    手続き定義開始 組版用属性情報代入（）
        &作業tbxId　= #IS表
        &outPutNum = 3
        &IN係N = 3
    手続き定義終了
    手続き定義開始 製版用属性情報代入（）
        &作業tbxId　= #IS表
        &outPutNum = 4
        &IN係N = 4
    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　テーブルID調査
*■*:　ターゲットのテーブルが開いてても開いて無くても表番号を返す関数
*■*:　引数１：ターゲットのテーブルアドレス
*■*:　引数２：新規で開くステータス（専有とか参照とか、すでに開いている場合はそのまま）
*■*:　戻り値：表のＩＤ
    手続き定義開始 テーブルID調査（ 文字列 &tbx ,文字列　&モード　, 参照　数値　&表ID ）

        *■*-------------------------------------
        *■*--  編集表番号取得（開いてても問題無し
        *■*-------------------------------------
        &表ID = #表番号取得( &tbx )
        if ( .not &表ID ) /*←未定義なら */
            
            表 &tbx , モード = &モード , 終了状態 = &CHK 
            &表ID = #表番号取得( &tbx )　　

        end

    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　用紙情報取得処理
手続き定義開始 用紙ID引用（ 数値 &用紙ID ）

    var 数値  { &表num = 0 }

    var 文字列{ &S銘柄 , &Sサブ銘柄 , &Sサイズ名 , &S目 }
    var 数値  { &SサイズID , &S重さ }

    手続き実行 テーブルID調査 ( &用紙IDTbx , "共有参照" , &表num )

    編集表　&表num

    検索 [ID] { &用紙ID } , 終了状態 = &CHK 

        if (&CHK = 1)
        
            &S銘柄 = [銘柄]
            &Sサブ銘柄 = [紙色]
            &SサイズID = [サイズ]
            &Sサイズ名　= [サイズ名目]
            &S目     = [目]
            &S重さ    = [重さ]
       
        end
    
    終了 表 &表num

    *■*-------------------------------------
    *■*-- 本体の方に反映
    *■*-------------------------------------
    編集表 &作業tbxId
    メソッド呼び出し @フォーム.更新モード設定(0)
    if (　&用紙ID　)
        行訂正 終了状態 = &CHK , [銘柄]= &S銘柄 , [サブ銘柄] = &Sサブ銘柄 , [用紙サイズ] = &SサイズID , [目] = &S目 , [重さ] = &S重さ
    end

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　＜　用紙ID入力後　＞
手続き定義開始　t用紙ID::ソース値更新()

    &作業tbxId　= #IS表 
    手続き実行　用紙ID引用( [用紙ID] )

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　入力されている情報を元に一行追加します。
手続き定義開始 日報行追加（）

    行追加 終了状態 = &CHK , [日付] = &IN日付N , [係] = &IN係N , [CD] = &INCDN , [担当者] = &IN担当者N ,　[伝票num] = &伝票ナンバーN ,\
        [得意先] = &IN得意先N , [品名] = &IN品名N , [ミス] = 0　,　[部数] = &IN部数N , [ページ] = &INページ数N　

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　伝票情報リセット　伝票情報と得意先、品名を空欄に置き換えます
手続き定義開始 伝票情報リセット（）

    if ( #総件数 )
    
        行訂正 終了状態 = &CHK ,  [伝票num] = "" , [得意先] = "" , [品名] = "" , [部数] = "" , [ページ] = ""

        メソッド呼び出し @フォーム.変数変更()
    end
    
手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　伝票番号を表引きして得意先と品名を取得する
手続き定義開始　IN_伝票ナンバー::ソース値更新()

    編集表　&作業tbxId
    &伝票ナンバーN = [伝票num]

    if ( &伝票ナンバーN )
    
        手続き実行 表オープン（ &subMastaTbx , &mode , &OPnum , &openF ）
        編集表 &OPnum

            ジャンプ 行番号 = 1
            検索 [伝票ＮＯ] { &伝票ナンバーN } , 終了状態 = &CHK 
            if (&CHK = 1)
                
                /*▼一旦初期化 */
                &IN得意先N ="" &IN品名N ="" &IN部数N ="" &INページ数N =""
                
                &IN得意先N =　[得意先]
                &IN品名N　　= [品名]
                &INサイズN  = [サイズ]

                /*▼部数か確定部数 */
                if ([確定部数])
                    &IN部数N = [確定部数]
                else
                    &IN部数N = [部数]
                end

                /*▼ページ数か確定ページ数 */
                if ([確定頁数])
                    &INページ数N = [確定頁数]
                else
                    &INページ数N = [頁数]
                end
            end

            解除 1

        条件 ( &openF = 0 ) 終了 表 &OPnum
    end

    編集表　&作業tbxId
    項目値代入 [得意先] = &IN得意先N , [品名] = &IN品名N , [部数] = &IN部数N , [ページ] = &INページ数N　
    

    メソッド呼び出し @フォーム.変数変更()

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　担当者を見つけてコードを取得する
手続き定義開始　IN_担当者::ソース値更新()

    手続き実行 表オープン（ &シモダ社員tbx , &mode参照 , &OPnum , &openF ）
    編集表 &OPnum

    ジャンプ 行番号 = 1
    検索 [略称] { &IN担当者N } , 終了状態 = &CHK 
    if (&CHK = 1)
        &INCDN = [社員ID]
    end

    条件 ( &openF = 0 ) 終了 表 &OPnum

    メソッド呼び出し @フォーム.変数変更()
手続き定義終了
*■*-------------------------------------
*■*--  こっちは番号入れたら出る
*■*-------------------------------------
手続き定義開始　INコード::ソース値更新()

    手続き実行 表オープン（ &シモダ社員tbx , &mode参照 , &OPnum , &openF ）
    編集表 &OPnum

    ジャンプ 行番号 = 1
    検索 [社員ID] { &INCDN } , 終了状態 = &CHK 
    if (&CHK = 1)
        &IN担当者N = [略称]
    end

    条件 ( &openF = 0 ) 終了 表 &OPnum

    メソッド呼び出し @フォーム.変数変更()

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　担当を入れたら後はコードも付いてくる
手続き定義開始　t内容::ソース値更新()

    メソッド呼び出し @フォーム.更新モード設定(0)

    var 数値  { &コード }
    &コード　= [内容]

    if ( &コード )
    
        手続き実行 表オープン（ &作業コードtbx , &mode , &OPnum , &openF ）
        編集表 &OPnum

            ジャンプ 行番号 = 1
            検索 [ID] { &コード } , 終了状態 = &CHK 
            if (&CHK = 1)
                &IN内容記載N = [Type]
            end

        終了 表 &OPnum

        行訂正 終了状態 = &CHK , [N:内容] = &IN内容記載N
    else
        &IN内容記載N = ""

    end
    メソッド呼び出し @フォーム.変数変更()

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　積算の自動計算を行います
手続き定義開始　全行積算計算（）
    ジャンプ 行番号 = 1
    繰り返し（ .NOT #終端行 ） 
    
        if ( [通し枚数] <>"" .and [表]　<>"" )
        
            &IN通し枚数N = "" /*←前の情報が残ってたら危ないのでリセット */
            var 数値  { &最大係数 , &計算後係数  }
            &IN通し枚数N = [通し枚数]
            &最大係数 = #横最大（ [表] , [裏] ）

            /*▼格納 */
            &計算後係数　= &IN通し枚数N * &最大係数
            行訂正 終了状態 = &CHK , [積算枚数] = &計算後係数
            メソッド呼び出し @フォーム.変数変更()

        end
       ジャンプ 行番号 = 次行 
    繰り返し終了

    ジャンプ 行番号 = 1

手続き定義終了
*■*----------------------------------------------------------
*■*----- 断裁情報引用する君
*■*----------------------------------------------------------
手続き定義開始 断裁情報引用する君（）
    var 数値  { &用紙IDset , &サイズIDset }
    var 文字列{ &用紙set , &サイズset }

    *■*-------------------------------------
    *■*-- Str変数に値が入っていれば処理する
    *■*-------------------------------------
    if ( &Str )

        &用紙set = #部分列 ( &Str , 0 , 5  ）
        &用紙IDset = #数値 ( &用紙set )

        &サイズset = #部分列 ( &Str , 6 , 2  ）
        &サイズIDset = #数値 ( &サイズset )
        *■*::::::::::::::::::::::::::::::::::::::::::::::::::::
        *■*　用紙情報と断裁後の印刷サイズ情報を用いて値にさっさと入れてしまおう
        *■*　１：用紙情報
        手続き実行 表オープン（ &用紙IDTbx  , &mode , &OPnum , &openF ）
        編集表 &OPnum

        var 文字列{ &めーがら , &かみいろ　,　&め }
        var 数値  { &さいず , &おもさ　}
        
        検索 [ID] { &用紙IDset } , 終了状態 = &CHK
        if ( &CHK = 1 )

            &めーがら = [銘柄]
            &かみいろ = [紙色]
            &さいず  = [サイズ]
            &め　　　 = [目]
            &おもさ　 = [重さ]
        end
        *■*::::::::::::::::::::::::::::::::::::::::::::::::::::
        *■*　２：変数を入力します
        編集表　&作業tbxId
        行訂正 終了状態 = &CHK ,　[用紙ID] = &用紙IDset , [銘柄]　= &めーがら , [サブ銘柄] = &かみいろ , [目] = &め ,\
        [重さ] = &おもさ , [印刷サイズ] = &サイズIDset , [用紙サイズ] = &さいず

        条件 ( &openF = 0 ) 終了 表 &OPnum
    end
   
手続き定義終了