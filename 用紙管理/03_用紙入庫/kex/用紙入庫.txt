*■***********************************************************
*■*** 
*■*** 用紙の入力情報をまとめる入力フォームです
*■*** 今まで入庫と納品を別フォームにしていましたが、今回１つにまとめます。
*■*** 
*■***********************************************************
    /*▼汎用 */
    var 数値  { &CHK , &mov } /*←適当に代入の値を消す用変数 */
    var 文字列{ &msgtxt , &タイトル　,　&表示本文 }
    var 数値  { &入庫TbxNum = 0 , &ns発注ID = 0 }

    /*▼案件用変数 */
    var 日時  { &days }
    var 文字列{ &担当者 }

    /*▼伝票関連 */
    var 日時  { &入力日 }
    var 数値  { &伝票ID , &ns部数 , &ns用紙ID , &ns枚数 }
    var 文字列{ &ns得意先 , &ns品名 }

    /*▼用紙情報 */
    var 文字列{ &ns銘柄 , &nsサブ銘柄 , &nsサイズ名 , &ns目 }
    var 数値  { &nsサイズID , &ns重さ }

    /*▼用紙情報 */
    var 数値  { &ns単価 , &ns前回単価 }
    var 文字列{ &ns単価種 }

    /*▼仕入れ先情報 */
    var 文字列{ &ns仕入先名 , &ns入庫予定時間 , &ns発注備考 }
    var 日時  { &ns入庫予定日付  }

    var 日時  { &ns受領日 }
    var 数値  { &ns金額 , &ns納品書番号 }
    var 文字列{ &ns納品書備考 }

    /*▼担当者情報 */
    var 数値  { &社員ID }
    var 文字列{ &担当者氏名 , &役職 , &携帯番号 , &社員略称 }

    /*▼表開き権限 */
    var 文字列{ &共有参照 = "共有参照" }
    var 文字列{ &専有 　　　= "専有" }

    /*▼仕入先単価情報格納 */
    var 数値  { &仕入先数 = 5 }
    var 文字列{ &ns仕入先配列[&仕入先数] = {} }
    var 数値  { &ns仕入先単価[&仕入先数] = {} }


    /*▼仕入先絞り込み */
    var 文字列{ &List仕入先 }
    
*■*-------------------------------------
*■*--  各パス関連
*■*-------------------------------------
    /*▼ファイルパス */
    var 文字列{ &用紙入庫DPath = #データパス名 }

    /*▼画像データ */
    var 文字列{ &iconPng = &用紙入庫DPath + "png\cut.png" }

*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　モーダルフォーム

    /*▼モーダルフォーム用変数 */
    var 数値  { &Num }
    var 文字列{ &Str }
    var 日時  { &Day }

    /*▼カレンダー */
    var 文字列{ &nSカレンダーmodal = &用紙入庫DPath + "..\..\System\modal\Calendar\INF_DatePicker.wfx" }

    /*▼電卓 */
    var 文字列{ &nS電卓modal = &用紙入庫DPath + "..\..\System\modal\Calculator\INF_電卓.wfx" }

    /*▼用紙仕入先選択 */
    var 文字列{ &nS仕入会社modal = &用紙入庫DPath + "..\..\System\modal\General\004_用紙_08_01_製紙会社リスト_1.wfx" }

    /*▼単価種リスト */
    var 文字列{ &nS単価種modal = &用紙入庫DPath + "..\..\System\modal\General\004_用紙_02_08_単価種_1.wfx" }

    /*▼社員リスト */
    var 文字列{ &nS社員リストmodal = &用紙入庫DPath + "..\..\System\modal\General\004_用紙_03_01_シモダ社員情報_1_(用紙発注者).wfx" }

    /*▼用紙索引 */
    var 文字列{ &S用紙IDmodal = &用紙入庫DPath + "..\01_用紙ID\用紙ID索引フォーム.wfx"  }

    /*▼用紙登録 */
    var 文字列{ &SN用紙登録変更form = &用紙入庫DPath +  "..\01_用紙ID\用紙ID登録変更フォーム.wfx"  }
    var 文字列{ &NextFrom =  &SN用紙登録変更form }
    var 文字列{ &EntryPassCodeFrom = &用紙入庫DPath + "..\01_用紙ID\利用者コード\EntryPasscode.wfx"  }
    var 文字列{ &passWord = "ADDIDP" }

*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　外部参照
*■*:
*■*:　共有ファイルから、サイズIDを使ってサイズ名称を取ってきます。

    /*▼用紙ID */
    var 文字列{ &用紙IDTbx = &用紙入庫DPath + "..\01_用紙ID\用紙ID.tbx" }
    var 数値  { &用紙IDTbxNum , &用紙IDTbxBoot }

    /*▼subMasta */
    var 文字列{ &subMastaTbx = &用紙入庫DPath + "..\..\submaster.tbx"}

    /*▼用紙サイズ */
    var 文字列{ &用紙サイズTbx = &用紙入庫DPath + "..\..\System\tbx\04_01_用紙サイズリスト.tbx" }

    /*▼用紙サイズ */
    var 文字列{ &仕入先Tbx = &用紙入庫DPath + "..\..\System\tbx\08_01_製紙会社リスト.tbx" }

    /*▼用紙サイズ */
    var 文字列{ &社員情報Tbx = &用紙入庫DPath + "..\..\System\tbx\03_01_シモダ社員情報.tbx" }

    /*▼発注書様参照 */
    var 文字列{ &用紙発注書tbx = &用紙入庫DPath + "rpx\用紙発注書.tbx"  }
    var 文字列{ &用紙発注書プリントrpx = &用紙入庫DPath + "rpx\用紙発注書.rpx"  }

    /*▼仕入れ先価格リスト */
    var 文字列{ &仕入れ先価格Tbx }
    var 数値  { &仕入れ先価格TbxNum , &仕入れ先価格tbxBoot }


*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　画像データ参照
*■*:
*■*:　共有から画像データを参照してもってきます
    /*▼SHIMODAロゴ */
    var 文字列{ &会社ロゴpng = &用紙入庫DPath + "..\..\System\logo\SHIMODA\Logo1(背景白).png" }

*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　ライブラリ
*■*:
*■*:　結局ライブラリが便利だから呼び出す
var 文字列  { &用紙入庫用Lib = &用紙入庫DPath + "..\..\System\Lib\Lib_ライブラリ桐処理.cmx" }
ライブラリ &用紙入庫用Lib


*■*----------------------------------------------------------
*■*-----　基本処理
*■*----------------------------------------------------------
名札 MAIN

*
手続き定義開始　フォーム::フォーム開始(長整数　&表番号)

    &入庫TbxNum = &表番号
    手続き実行　InPut在庫情報( 1 )

手続き定義終了
*■*----------------------------------------------------------
*■*-----　各オブジェクトイベント
*■*----------------------------------------------------------
    *■*******************************************************
    *■*: パレット変数初期化
    手続き定義開始 変数リセット（）
        &入力日 = ""

        /*▼伝票関連 */
        &伝票ID = "" &ns部数 = "" &ns用紙ID = "" &ns枚数 = ""
        &ns得意先 = "" &ns品名 = ""

        /*▼用紙情報 */
        &ns銘柄 = "" &nsサブ銘柄 = "" &nsサイズ名 = "" &ns目 = ""
        &nsサイズID = "" &ns重さ = ""

        /*▼用紙情報 */
        &ns単価 = ""　&ns前回単価 = ""
        &ns単価種 = ""

        /*▼仕入れ先情報 */
        &ns仕入先名 = "" &ns入庫予定時間 = "" &ns発注備考 = ""
        &ns入庫予定日付  = ""

        &ns受領日 = ""
        &ns金額 = "" &ns納品書番号 = ""
        &ns納品書備考 = ""

        /*▼担当者情報 */
        &社員ID = ""
        &担当者氏名 = "" &役職 = "" &携帯番号 = "" &社員略称 = ""

        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()

    手続き定義終了
    *■***********************************************************
    *■*** 仕入先単価情報を格納
    *■***********************************************************
    手続き定義開始 仕入先単価情報収集（ 数値 &ID ）

        if ( &ID )
        
        
            var 数値  { &OPnum = 0  , &openF = 0 , &count1 = 1 }
            手続き実行 表オープン（ &用紙IDTbx , &共有参照 , &OPnum , &openF ）
            編集表 &OPnum

                検索 [ID] { &ID } , 終了状態 = &CHK 

                /*▼1/5_配列に調査結果を格納します｡ */
                if ( [児島単価] )
                    &ns仕入先配列[&count1] = "児島"
                    &ns仕入先単価[&count1] = [児島単価]
                    &count1 =　&count1 + 1
                end
                /*▼2/5_配列に調査結果を格納します｡ */
                if ( [網中単価] )
                    &ns仕入先配列[&count1] = "網中"
                    &ns仕入先単価[&count1] = [網中単価]
                    &count1 =　&count1 + 1
                end
                /*▼3/5_配列に調査結果を格納します｡ */
                if ( [レイメイ単価] )
                    &ns仕入先配列[&count1] = "レイメイ藤井"
                    &ns仕入先単価[&count1] = [レイメイ単価]
                    &count1 =　&count1 + 1
                end
                /*▼4/5_配列に調査結果を格納します｡ */
                if ( [紙弘単価] )
                    &ns仕入先配列[&count1] = "紙弘"
                    &ns仕入先単価[&count1] = [紙弘単価]
                    &count1 =　&count1 + 1
                end
                /*▼5/5_配列に調査結果を格納します｡ */
                if ( [汎用単価] )
                    &ns仕入先配列[&count1] = "その他"
                    &ns仕入先単価[&count1] = [汎用単価]
                    &count1 =　&count1 + 1
                end

                /*▼変数情報を更新する */
                メソッド呼び出し @フォーム.変数変更()

            条件 ( &openF = 0 ) 終了 表 &OPnum
        end
        
    手続き定義終了
    *■***********************************************************
    *■*** 変数インプット
    *■***********************************************************
    手続き定義開始 InPut在庫情報（ 数値　&行 ）

        *■*:::::::::::::::::::::::::::::
        *■*:　行情報が入っている
        if (　&行 <> 0 )
        
            手続き実行 変数リセット（）

            *■*:　その行にジャンプして必要情報を変数に入れる
            ジャンプ 行番号 = &行

            /*▼変数を入れる */
                &入力日 = [入力日]

                /*▼伝票関連 */
                &伝票ID = [伝票ID] &ns用紙ID = [用紙ID] &ns枚数 = [枚数]
                &ns得意先 = [得意先] &ns品名 = [品名]

                /*▼用紙情報 */
                &ns銘柄 = [銘柄] &nsサブ銘柄 = [紙色] &nsサイズ名 = [サイズ名] &ns目 = [目]
                &nsサイズID = [サイズID] &ns重さ = [重さ]

                /*▼用紙情報 */
                &ns単価 = [単価] &ns前回単価 = [入庫単価]
                &ns単価種 = [単価種]

                /*▼仕入れ先情報 */
                &ns仕入先名 = [仕入先] &ns入庫予定時間 = [入庫予定時間] &ns発注備考 = [発注備考]
                &ns入庫予定日付  = [入庫予定日付]

                &ns受領日 = [受領日]
                &ns金額 = [金額] &ns納品書番号 = [納品書番号]
                &ns納品書備考 = [納品備考]

                /*▼担当者情報 */
                &社員ID = [社員ID]
                &社員略称 = [発注者]
       
        end

        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()

    手続き定義終了
*■***********************************************************
*■*** レコードを移動するたびに行情報を更新する
*■***********************************************************
    手続き定義開始　フォーム::レコード移動(長整数　&行番号，長整数　&総件数，長整数　&明細番号)
        
        手続き実行　InPut在庫情報( #行番号 )

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　伝票ID　ソース更新
    手続き定義開始　伝票ID::ソース値更新()

        手続き実行 伝票情報格納　( &伝票ID , &ns得意先 , &ns品名 , &ns部数 )
        編集表 &入庫TbxNum
        メソッド呼び出し @フォーム.更新モード設定(0)

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　用紙ID　ソース更新
    手続き定義開始　用紙ID::ソース値更新()

        手続き実行 用紙ID情報格納　( &ns用紙ID , &ns仕入先名　, &ns銘柄　, &nsサブ銘柄  , &nsサイズID , &nsサイズ名 , &ns目  , &ns重さ , &ns単価種　, &ns単価　)
        編集表 &入庫TbxNum
        手続き実行 仕入先単価情報収集（ &ns用紙ID ）
        メソッド呼び出し @フォーム.更新モード設定(0)

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　仕入れ先　ソース更新
    手続き定義開始　仕入先::ソース値更新()
        
        手続き実行 仕入れ先用紙単価格納( &ns仕入先名　, &ns用紙ID , &ns単価 , &ns単価種 )
        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　＜　金額　＞　金額更新時に単価を修正する
    手続き定義開始　t金額::ソース値更新()

        手続き実行 単価作成関数（　　&ns単価種, &ns重さ , &ns金額 ,　&ns枚数 ）
        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　＜　枚数　＞用オブジェクト動作
    手続き定義開始　t枚数::ソース値更新()

        手続き実行 金額作成関数（　　&ns単価種 , &ns重さ　, &ns単価 ,　&ns枚数 ）
        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　＜　単価種　＞用オブジェクト動作
    手続き定義開始　t単価種::入力前(参照　文字列　&編集文字列)

        &ns単価種 = &編集文字列
        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()


    手続き定義終了
    手続き定義開始　t単価種::ソース値更新()
        
        手続き実行 単価作成関数（　　&ns単価種 , &ns重さ , &ns金額　,　&ns枚数　）
        /*▼変数情報を更新する */
        メソッド呼び出し @フォーム.変数変更()

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　<　社員氏名更新　>
    手続き定義開始　テキスト社員氏名::ソース値更新()

        手続き実行　社員略称から検索（　0　, &社員略称 ）

    手続き定義終了
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　<　社員ID更新　>　ID更新すると自動で他の表引きが完了する
    手続き定義開始　テキスト社員ID::ソース値更新()

        手続き実行　社員略称から検索（　&社員ID　, "" ）

    手続き定義終了
    
    *■*::::::::::::::::::::::::::::::::::::::::::::::::::::::
    *■*:　<　絞り込み更新　>　入力した仕入先で絞り込みます
    手続き定義開始　List仕入先絞り込み::ソース値更新()

        解除　1
        絞り込み [仕入先] { &List仕入先 } , 終了状態 = &CHK

    手続き定義終了
*■*----------------------------------------------------------
*■*----- 各手続き
*■*----------------------------------------------------------
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　テーブルID調査
*■*:　ターゲットのテーブルが開いてても開いて無くても表番号を返す関数
*■*:　引数１：ターゲットのテーブルアドレス
*■*:　引数２：新規で開くステータス（専有とか参照とか、すでに開いている場合はそのまま）
*■*:　戻り値：表のＩＤ
    手続き定義開始 テーブルID調査（ 文字列 &tbx ,文字列　&モード　, 参照　数値　&表ID ）

        *■*-------------------------------------
        *■*--  編集表番号取得（開いてても問題無し
        *■*-------------------------------------
        &表ID = #表番号取得( &tbx )
        if ( .not &表ID ) /*←未定義なら */
            
            表 &tbx , モード = &モード , 終了状態 = &CHK 
            &表ID = #表番号取得( &tbx )　　

        end
    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　伝票番号から案件詳細情報を変数に格納する
*■*:　引数１：ターゲットの伝票番号
*■*:　戻値１：参照：得意先情報
*■*:　戻値２：参照：品名
*■*:　戻値３：参照：部数
    手続き定義開始 伝票情報格納（ 数値　&ID , 参照 文字列 &得意先 , 参照 文字列 &品名 , 参照 数値 &部数 ）

        var 数値  { &表ID = 0 }
        手続き実行 テーブルID調査( &subMastaTbx , &共有参照 , &表ID )
        編集表　&表ID

        検索 [伝票ＮＯ] { &ID } , 終了状態 = &CHK 

            if (&CHK = 1)

                &部数 =     [部数]
                &得意先 =  [得意先]
                &品名 =　　　[品名]
        
            end
        
        終了 表 &表ID
    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　用紙IDから用紙詳細情報を変数に格納する
*■*:　引数１：ターゲットの用紙ID
*■*:　戻値１：参照：銘柄
*■*:　戻値２：参照：サブ銘柄
*■*:　戻値３：参照：サイズＩＤ
*■*:　戻値４：参照：サイズ名目
*■*:　戻値５：参照：YT(横目縦目)
*■*:　戻値６：参照：重さ
    手続き定義開始 用紙ID情報格納（ 数値　&ID , 文字列 &仕入れ先　,　参照 文字列 &銘柄 , 参照 文字列 &サブ銘柄 , 参照 数値 &サイズID , 参照 文字列 &サイズ名 , 参照 文字列 &YT , 参照 数値 &重さ , 参照　文字列　&単価種　,　参照　数値　&単価　）

        var 数値  { &表ID = 0 }
        手続き実行 テーブルID調査( &用紙IDTbx , &共有参照 , &表ID )
        編集表　&表ID

        検索 [ID] { &ID } , 終了状態 = &CHK 

            if (&CHK = 1)

                &銘柄       = [銘柄]
                &サブ銘柄    = [紙色]
                &サイズID    = [サイズ]
                &サイズ名   = [サイズ名目]
                &YT         = [目]
                &重さ       = [重さ]

            end
        
        終了 表 &表ID

        /*▼仕入れ先に情報があれば */
        if ( &仕入れ先 )

            手続き実行 仕入れ先用紙単価格納( &仕入れ先　, &ID , &単価 , &単価種 )
        
        end
    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　仕入れ先を設定すると用紙IDから単価と単価種を返す。
*■*:　引数１：ターゲットの仕入れ先
*■*:　引数２：ターゲットの用紙ID
*■*:　戻値１：参照：単価
*■*:　戻値２：参照：単価種
    手続き定義開始　仕入れ先用紙単価格納（ 文字列 &仕入れ先　, 数値 &用紙ID , 参照　数値 &単価　, 参照　文字列　&単価種 ）

        var 数値  { &仕入表ID = 0 }
        手続き実行 テーブルID調査( &用紙IDTbx , &共有参照 , &仕入表ID )
        編集表　&仕入表ID

            検索 [ID] { &用紙ID } , 終了状態 = &CHK

            /*▼仕入れ先分岐 */
            ケース開始
                ケース（ &仕入れ先  = "児島" ）
                    &単価 = [児島単価]
                    &単価種 = [単価種]
                ケース（ &仕入れ先  = "レイメイ" ）
                    &単価 = [レイメイ単価]
                    &単価種 = [単価種]
                ケース（ &仕入れ先  = "網中" ）
                    &単価 = [網中単価]
                    &単価種 = [単価種]
                ケース（ &仕入れ先  = "紙弘" ）
                    &単価 = [紙弘単価]
                    &単価種 = [単価種]
                ケース（ &仕入れ先  = "紙弘福岡" ）
                    &単価 = [紙弘単価]
                    &単価種 = [単価種]
                ケース　その他
                    &単価 = [汎用単価]
                    &単価種 = [単価種]

            ケース終了

        終了 表 &仕入表ID
    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　選択している行の単価を修正する手続きです。
    手続き定義開始 単価修正処理（）

        *■*-------------------------------------
        *■*-- 専用変数定義
        *■*-------------------------------------
        var 数値  { &選択肢 }
        var 数値  { &用紙ID , &重さ　}
        var 文字列{ &銘柄 , &紙色 , &サイズ名 , &YT  }

        var 文字列{ &仕入先 , &単価種 }
        var 数値  { &入庫単価 , &単価 }
        *■*-------------------------------------
        *■*-- 変数格納
        *■*-------------------------------------

        &用紙ID = [用紙ID]
        &重さ　　 = [重さ]

        &銘柄   = [銘柄]
        &紙色   = [紙色]
        &サイズ名 = [サイズ名]
        &YT     = [目]

        &仕入先 = [仕入先]
        &単価種 = [単価種]
        &入庫単価 = [入庫単価]
        &単価  = [単価]


        *■*-------------------------------------
        *■*-- 確認表示
        *■*-------------------------------------

        &タイトル = "以下の単価情報を更新します。"
        &表示本文 = "用紙ID:　" +#文字列( &用紙ID ) + " " + &銘柄 + " " + &紙色 + " " + &サイズ名 + " " + &YT + " " + #文字列(　&重さ )　\
        + "         \n\n仕入先: ｛ " + &仕入先 + " ｝　　 " \
        + "         \n\n単価種:　 " + &ns単価種 +"  →  " + &単価種 \
        + "         \n\n単価　　:  " + #文字列( &入庫単価 ) + "  →  " + #文字列( &単価 )

        メッセージボックス &タイトル ,\
            &表示本文 , アイコン = ? , ボタン指定 = 5 , 制御文字展開 = する , &選択肢
        
        *■*-------------------------------------
        *■*-- 実行処理
        *■*-------------------------------------
        if (　&選択肢 = 6　)

            利用者コード "ADDIDP"
            var 数値  { &用紙表ID = 0 }
            手続き実行 テーブルID調査( &用紙IDTbx , &専有 , &用紙表ID )
                

            検索 [ID] { &用紙ID } , 終了状態 = &CHK 
            if ( &CHK = 1 )
            
                /*▼仕入れ先分岐 */
                ケース開始
                    ケース（ &仕入先  = "児島" ）
                        行訂正 終了状態 = &CHK , [児島単価] = &単価 , [単価種] = &単価種

                    ケース（ &仕入先  = "レイメイ" ）
                        行訂正 終了状態 = &CHK , [レイメイ単価] = &単価 , [単価種] = &単価種
                    
                    ケース（ &仕入先  = "網中" ）
                        行訂正 終了状態 = &CHK , [網中単価] = &単価 , [単価種] = &単価種

                    ケース（ &仕入先  = "紙弘" ）
                        行訂正 終了状態 = &CHK , [紙弘単価] = &単価 , [単価種] = &単価種

                    ケース（ &仕入先  = "紙弘福岡" ）
                        行訂正 終了状態 = &CHK , [紙弘単価] = &単価 , [単価種] = &単価種

                    ケース　その他
                        行訂正 終了状態 = &CHK , [汎用単価] = &単価 , [単価種] = &単価種

                ケース終了

            end
            終了 表 &用紙表ID

            *■*:::::::::::::::::::::::::::
            *■*:　入庫テーブルに戻って現状を更新
            編集表 &入庫TbxNum
            
            &ns単価 = &単価 , &ns単価種 = &単価種

            &msgtxt　= "用紙tbx の単価情報を更新しました。"
            確認 &msgtxt

        end
    手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　金額と単価種から、単価の項目を返す関数
*■*:　引数１：単価種
*■*:　引数２：重さ
*■*:　引数３：単価
*■*:　引数４：枚数
*■*: #条件選択(　[単価種] = "㌔単価" ,([重さ]*[単価]/1000)*[枚数], [単価種] = "枚単価",[枚数]*[単価] ,[単価種] = "㌘単価" ,([重さ]*[単価]/100)*[枚数])
手続き定義開始 金額作成関数（　文字列　&単価種 , 数値　&重さ , 数値 &単価 ,　数値　&枚数 ）

    *■*-------------------------------------
    *■*-- 実行処理
    *■*-------------------------------------
    var 数値  { &金額 = 0 }

    /*▼単価種の分類によって計算方法が違う */
    ケース開始
        ケース（ &単価種 = "㌔単価" ）
            &金額 = ( &重さ　* &単価 / 1000 ) * &枚数

        ケース（ &単価種 = "㌘単価" ）
            &金額 = ( &重さ　* &単価 / 100 ) * &枚数
        
        ケース（ &単価種 = "枚単価" ）
            &金額 = ( &単価 ) * &枚数
    
    ケース終了

    &ns金額 = #切り捨て( &金額 , 0 )

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　金額と単価種から、単価の項目を返す関数
*■*:　引数１：単価種
*■*:　引数２：重さ
*■*:　引数３：単価
*■*:　引数４：枚数
*■*: #条件選択(　[単価種] = "㌔単価" ,([重さ]*[単価]/1000)*[枚数], [単価種] = "枚単価",[枚数]*[単価] ,[単価種] = "㌘単価" ,([重さ]*[単価]/100)*[枚数])
手続き定義開始 単価作成関数（　文字列　&単価種 , 数値　&重さ , 数値 &金額 ,　数値　&枚数 ）

    *■*-------------------------------------
    *■*-- 実行処理
    *■*-------------------------------------
    var 数値  { &単価 = 0 }

    /*▼単価種の分類によって計算方法が違う */
    ケース開始
        ケース（ &単価種 = "㌔単価" ）
            &単価 = ( &金額　* 1000 )　/　（ &重さ　* &枚数 ） 

        ケース（ &単価種 = "㌘単価" ）
            &単価 = ( &金額　* 100 )　/　（ &重さ　* &枚数 ） 

        ケース（ &単価種 = "枚単価" ）
            &単価 =  &金額　　/　（ &枚数 ） 
    
    ケース終了

    &ns単価 = #切り上げ( &単価 , 2 )

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　表示合計の計算をする
手続き定義開始　表示金額合計計算（）

    var 数値  { &sum = 0 }
    var 文字列{ &タイトル , &表示本文 }

    項目集計 [金額]

    &sum = #切り捨て( &合計値 , 0 )

    &タイトル　= "金額合計値表示"
    &表示本文 = "TOTAL : " + #通貨文字列( &sum , "¥" ) + " です。"

    メッセージボックス &タイトル , &表示本文 , アイコン = ? , ボタン指定 = 2 , 制御文字展開 = する , &CHK


手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　用紙発注書　作成フォーム
手続き定義開始 用紙発注書作成（）

    var 数値  { &用紙発注num = 0 , &用紙発注ID = 0 , &仕入先Tbxnum = 0 , &グループnum = 0 }
    var 文字列{ &Res , &正式名 , &正式担当者 , &仕入先FAX　}

    *■*-------------------------------------
    *■*-- 社員情報が未記入だったら処理ヲ中止します。
    *■*-------------------------------------
    if ( &社員略称 = "" )

        確認 "作業者の情報が未記入です！"
        手続き終了

    end

    /*▼tbxに絞り込んだデータをコピーする */
    編集表 &入庫TbxNum

    解除 * 

    /*▼発注IDの最大を取っとく */
    項目集計　[発注ID]
    if ( &最大値 < 200000 ) /*←万が一初期値が入っていない場合は初期値の100000を代入 */
        &最大値 = 200000
    end
    &用紙発注ID = &最大値

    絞り込み [出力済] { #未定義 } , 終了状態 = &CHK
    絞り込み [仕入先] { <>"" } , 終了状態 = &CHK        /*←仕入先の入れ忘れは外す様にする */

    *■*-------------------------------------
    *■*-- 絞り込んだ結果、0件だったら処理ヲ中止
    *■*-------------------------------------
    if ( #総件数 = 0 )

        &msgtxt = "出力する件数が0件のため、処理を中止します。"
        確認 &msgtxt 
        解除 2
        手続き終了

    end
    *■*-------------------------------------
    *■*-- 必要入力情報が未定義だとエラーにする
    *■*-------------------------------------
    var 数値  { &outCHK = 0 }

    /*▼[用紙ID]の未定義を確認 */
    手続き実行 未定義情報チェック( "用紙ID" , &outCHK )
    条件 ( &outCHK > 0 ) 手続き終了

    /*▼[枚数]の未定義を確認 */
    手続き実行 未定義情報チェック( "枚数" , &outCHK )
    条件 ( &outCHK > 0 ) 手続き終了

    /*▼[仕入先]の未定義を確認 */
    手続き実行 未定義情報チェック( "仕入先" , &outCHK )
    条件 ( &outCHK > 0 ) 手続き終了

    /*▼[単価種]の未定義を確認 */
    手続き実行 未定義情報チェック( "単価種" , &outCHK )
    条件 ( &outCHK > 0 ) 手続き終了

    /*▼[入庫予定日]の未定義を確認 */
    手続き実行 未定義情報チェック( "入庫予定日付" , &outCHK )
    条件 ( &outCHK > 0 ) 手続き終了

    /*▼[入庫時間]の未定義を確認 */
    手続き実行 未定義情報チェック( "入庫予定時間" , &outCHK )
    条件 ( &outCHK > 0 ) 手続き終了

    
    並べ替え  { [仕入先] 昇順 , [入庫予定日付] 昇順 , [銘柄] 昇順 }

    置換 終了状態 = &CHK , [出力ID] = #行番号
  
    書き出し 表 , &用紙発注書tbx , 終了状態 = &CHK

    /*▼必要な表を呼び出し */
    手続き実行　テーブルID調査（　&仕入先Tbx ,　&専有　, &仕入先Tbxnum ）   

    手続き実行　テーブルID調査（　&用紙発注書tbx ,　&専有　, &用紙発注num ）
    編集表 &用紙発注num

    /*▼新規で２項目追加しておく */
    項目属性変更２ 追加 { "仕入先正式名" , "文字列" } , 追加 , { "仕入先担当名" , "文字列" } , 追加 , { "仕入先FAX" , "文字列" } , 追加 , { "グループ" , "数値" } 
    

    /*▼tbxの情報を埋める。・並べ替え・ID割り振り・グループ化　 */
    繰り返し（ .NOT #終端行 ）
             
        /*▼仕入情報を格納 */
        &Res = [仕入先]

        編集表 &仕入先Tbxnum
        
        検索 [略称] { &Res } , 終了状態 = &CHK 
        &正式名　　　　 = [会社名]
        &正式担当者  = [担当者1]
        &仕入先FAX   = [FAX]
        

        編集表 &用紙発注num
        行訂正 終了状態 = &CHK , [仕入先正式名] = &正式名 , [仕入先担当名] = &正式担当者 , [仕入先FAX] = &仕入先FAX

        ジャンプ 行番号 = 次行 
    繰り返し終了

    /*▼用紙発注IDを選択して、グループごとにIDをつけます。 */
    var 数値  { &用紙発注tbx用発注ID = 0 }
    置換 終了状態 = &CHK , [グループ] = #グループ ( [仕入先] )　
    繰り返し（ .NOT #終端行 ）

        &用紙発注tbx用発注ID  = &用紙発注ID + [グループ]
        行訂正 終了状態 = &CHK , [発注ID] = &用紙発注tbx用発注ID

        ジャンプ 行番号 = 次行 
    繰り返し終了
   
    /*▼プレビュー */
    レポート印刷 &用紙発注書プリントrpx , 会話 = しない , プレビュー = する , 終了状態 = &CHK

    /*▼完了YESNo */
    &タイトル　 = "確認"
    &表示本文 = "今回表示した項目を全てプリントアウト済みに設定しますか？"
    メッセージボックス &タイトル , &表示本文 , アイコン = ? , ボタン指定 = 5 , 制御文字展開 = しない , &CHK

    /*▼[はい]なら置換処理。発注IDを戻して、出力済フラグを立てる。 */
    if ( &CHK = 6 )
  
        編集表 &入庫TbxNum
        併合　&用紙発注書tbx　, 置換 , 編集表 = する , 終了状態 = &CHK ,\
            { [出力ID] 照合 [出力ID] , [発注ID]　複写　[発注ID]　}

        置換 終了状態 = &CHK , [出力済] = "◎" , [出力日] = #日時値 , [発注者] = &社員略称
        
    end

    終了 表　&仕入先Tbxnum
    終了 表　&用紙発注num


手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　用紙発注書　作成フォーム
*■*:　引数１：社員IDを取得　（0なら名前を使って検索。　1以上ならコードを使う）
*■*:　引数２：社員名を取得
手続き定義開始 社員略称から検索（　数値 &code　, 文字列　&社員略称改 ）

    var 数値  { &表ID = 0 }
    手続き実行 テーブルID調査(  &社員情報Tbx  , &共有参照 , &表ID )
    編集表　&表ID

    if ( &code = 0 )

        検索 [略称] { &社員略称改 } , 終了状態 = &CHK 
        if ( &CHK = 1 )

            &社員ID     = [社員ID]
            &担当者氏名  = [名前]
            &役職       = [役職]
            &携帯番号   =　[支給携帯ナンバー]
        end
    else
        /*▼コードが存在したら、コードを使って検索 */
        検索 [社員ID] { &code } , 終了状態 = &CHK 
        if ( &CHK = 1 )

            &担当者氏名  = [名前]
            &役職       = [役職]
            &携帯番号    =　[支給携帯ナンバー]
            &社員略称　　 = [略称]

        end
         
    end
    終了　表　&表ID
    メソッド呼び出し @フォーム.変数変更()

手続き定義終了
*■*::::::::::::::::::::::::::::::::::::::::::::::::::::::
*■*:　未定義情報チェック　項目名を渡すと、その行の未定義を調べてその行番号を返す
*■*:　引数１：項目名（文字列）
*■*:　戻値１：行番号、検知しなければ０が帰る　（数値）
手続き定義開始 未定義情報チェック（ 文字列 &項目　, 参照　数値　&行番号　）

    var 文字列{ &コマンド1 }
    &コマンド1 = "検索 [" + &項目 + "] { #未定義 } , 終了状態 = &行番号"
    
    コマンド &コマンド1

    if ( &行番号　 > 0 )

        &msgtxt = " [" + &項目 +　"] ： " +　#文字列( &行番号 ) + " 行目で未入力箇所があります！"
        確認 &msgtxt 

    end

手続き定義終了