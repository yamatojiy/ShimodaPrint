{
	//　桐の専用コマンド  001番台から使用
	"桐1": {
		"prefix": "W繰り返し",
		"body": [
			"繰り返し (変数) = 1 ,(最大変数)",
			"　　処理",
			"繰り返し中止",
			"繰り返し終了"
		],
		"description": "W繰り返しの基本構文①"
	},
	"桐2": {
		"prefix": "W繰り返し最終行",
		"body": [
			"繰り返し (.NOT #終端行)",
			"　　処理",
			"繰り返し中止",
			"繰り返し終了"
		],
		"description": "繰り返しの最終行まで"
	},
	"桐3": {
		"prefix": "W印字",
		"body": [
			"印字開始 （印字するテキストファイルパス）, 終了状態 = &変数 ",
			"　　印字 （印字内容）",
			"印字終了"
		],
		"description": "繰り返しの最終行まで"
	},
	"桐4": {
		"prefix": "W手続き定義開始",
		"body": [
			"手続き定義開始 （手続き名）(戻り値)",
			"　　処理",
			"手続き定義終了"
		],
		"description": "手続き定義。イベントのみで使用可能"
	},
	"桐5": {
		"prefix": "W名札定義",
		"body": [
			"名札 （名札名）",
			"　　処理",
			"終了"
		],
		"description": "名札名 一括処理で使用可能"
	},
	"桐6": {
		"prefix": "W表を開く",
		"body": [
			"表 ファイルパス , , モード = 共有更新 ",
			"　　",
			"終了  表  編集対象表"
		],
		"description": "イベント処理の場合は終了処理いらないかも"
	},
	"桐7": {
		"prefix": "W重複",
		"body": [
			"絞り込み 単一化 = {[[結合名]]} ",
			"絞り込み 補集合",
			"行削除 * ",
			"解除 * "
		],
		"description": "重複しているものを削除して１項にします"
	},
	"桐8": {
		"prefix": "W書き出し",
		"body": [
			"表 （書き込み先のファイルパス） , , モード = 共有更新 ",
			"書出し 表 , (書き出し元のファイルパス)",
			"終了  表  編集対象表",
		],
		"description": "ファイルに書き出す際の一連処理を呼びます"
	},
	"桐9": {
		"prefix": "W読み込み",
		"body": [
			"表 （書き込み先のファイルパス） , , モード = 共有更新 ",
			" 行削除  * , 圧縮 ",
			"読み込み テキスト , (読み込むファイルパス),区切り = (▽↑▽)",
			"終了  表  編集対象表",
		],
		"description": "ファイルを特定のテーブルに読み込ませる▽はだぶるこーて"
	},
	"桐10": {
		"prefix": "Wメッセージ",
		"body": [
			"msgbox （見出し：表示テキストはだぶるこーて）, えんまーく ",
			" （本文：テキストはだぶるこーて）, えんまーく ",
			"アイコン = i , えんまーく",
			"ボタン指定 = 1",
		],
		"description": "一番シンプルなメッセージテキストです"
	},

	//　C言語っぽいけど特殊な構文  500番台から使用
	"kari": {
		"prefix": "#通貨文字列( num , str )",
		"body": [
			"if (判定式)",
			"else",
			"end"
		],
		"description": "いふぶん"
	},






	//　単語自体の登録  1000番台から使用
	"桐1000": {
		"prefix": "Q手続き実行",
		"body": [
			"手続き実行 （実行名）",
		],
		"description": "手続き実行のコマンド"
	},	
	"桐1001": {
		"prefix": "Q確認",
		"body": [
			"確認 （表示文言文字列はダブルコーテーション）",
		],
		"description": "確認ダイアログを表示する"
	},	
	"桐1002": {
		"prefix": "A連結",
		"body": [
			"#連結 (A , B , C)",
		],
		"description": "ABCは文字列にすること"
	},	
	"桐1003": {
		"prefix": "A終端行",
		"body": [
			"#終端行",
		],
		"description": "最終行であるかの判定を返します"
	},	
	"桐1004": {
		"prefix": "Qジャンプ",
		"body": [
			"ジャンプ 行番号 = 次行 ",
		],
		"description": "次の行へ移動するコマンド"
	},
	"桐1005": {
		"prefix": "Q行削除",
		"body": [
			"行削除 *,圧縮",
		],
		"description": "行を削除して圧縮します"
	},	
	"桐1006": {
		"prefix": "Q絞り込み",
		"body": [
			"絞り込み (条件)",
		],
		"description": "絞り込みのコマンド"
	},	
	"桐1007": {
		"prefix": "A総件数",
		"body": [
			" #総件数",
		],
		"description": "テーブルの総件数を調べて返します"
	},	
	"桐1008": {
		"prefix": "Q利用者コード",
		"body": [
			"利用者コード (ぱわすーど)",
		],
		"description": "コードがある場合は表の前に記載する"
	},	
	"桐1009": {
		"prefix": "Q並べ替え",
		"body": [
			"並べ替え  { [納品日],[時間] 昇順, [分類] 辞書逆順 }　　/*納期順に絞り混む*/",
		],
		"description": "並べ替えのサンプル"
	},	
	"桐1010": {
		"prefix": "A日数加算",
		"body": [
			"#日数加算(#日時日付( #日時値 ),0)",
		],
		"description": "今日の日付をデータ化（時間は切り捨て）0を-1にすれば１日前"
	},
	"桐1011": {
		"prefix": "A月数加算",
		"body": [
			"#月数加算(#日時日付( #日時値 ),0)",
		],
		"description": "今日の日付をデータ化（時間は切り捨て）0を-1にすれば１月前"
	},
	"桐1012": {
		"prefix": "A条件選択",
		"body": [
			"#条件選択( 条件式A , 結果A, 条件式B , 結果B）",
		],
		"description": "条件分岐を作る"
	},
	"桐1013": {
		"prefix": "A条件色変え",
		"body": [
			"#条件選択([項目]=△入庫△,△背景モード▲指定色▲,背景色▲RGB(93,156,236)▲△,[項目]=△消費△,△背景モード▲指定色▲,背景色▲RGB(251,110,82)▲△)",
		],
		"description": "△だぶるこーて　▲しんぐるこーて"
	},
	"桐1014": {
		"prefix": "A表引き",
		"body": [
			"表引き([比較値], = , △参照tbx△ , [参照tbxの検索項], [ほしい値])"
		],
		"description": "△だぶるこーて"
	},
	"桐1015": {
		"prefix": "Aジャンプ終",
		"body": [
			"ジャンプ　行番号 = 終端"
		],
		"description": "最終行までジャンプ"
	},
	// Place your snippets for plaintext here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}